<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>


	<!-- Template Project file for my projects - based on https://maven.apache.org/pom.html -->

	<groupId>neilpiper.me</groupId>
	<artifactId>parent.pom</artifactId>
	<!-- Default starting version is 0-SNAPSHOT -->
	<version>0.0.1_${revision}</version>
	<packaging>pom</packaging>
	<!-- <parent /> <dependencies /> -->
	<parent>
		<version>0.0.1_19.0e141d9</version>
		<groupId>neilpiper.me</groupId>
		<artifactId>parent.org</artifactId>
	</parent>


	<properties>
		<project.name>npiper-parent-pom</project.name>
		<!-- Sane default when no revision property is passed in from the commandline -->
		<revision>0-SNAPSHOT</revision>
		<!-- Enforces these minimum versions on build -->
		<minimumJavaVersion>1.7</minimumJavaVersion>
		<!-- Default maven plugin versions -->
		<mavenCheckstylePluginVersion>3.0.0</mavenCheckstylePluginVersion>
		<codehauseCorbeturaPluginVersion>2.7</codehauseCorbeturaPluginVersion>
		<pmd.version>3.9.0</pmd.version>
		<pmd.failurePriority>5</pmd.failurePriority>
		<junitVersion>4.12</junitVersion>
		<coverageMetric>80</coverageMetric>
	</properties>

	<!-- BUILD SETTINGS -->
	<dependencies>

		<!-- TEST -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junitVersion}</version>
			<scope>test</scope>
		</dependency>

		<!-- LOGGING LOG4j -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.11.0</version>
		</dependency>


	</dependencies>

	<build>

		<!-- Set inherited to true -->
		<plugins>

			<!-- VALIDATION PHASE -->
			<!-- Enforcer, Checkstyle & PMD -->

			<!-- Checkstyle Google Checks -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${mavenCheckstylePluginVersion}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.9</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<inherited>true</inherited>
						<configuration>
							<!-- Google checks - built in http://checkstyle.sourceforge.net/google_style.html -->
							<configLocation>google_checks.xml</configLocation>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<linkXRef>false</linkXRef>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- ENFORCER !! -->
			<!-- Java 1.7+ -->
			<!-- Maven 3.2+ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${mavenEnforcerPluginVersion}</version>
				<executions>
					<execution>
						<id>enforce-java</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<phase>validate</phase>
						<inherited>true</inherited>
						<configuration>
							<rules>
								<!-- Java >= 1.7 -->
								<requireJavaVersion>
									<version>${minimumJavaVersion}</version>
								</requireJavaVersion>

								<!-- Maven >= 3.2+ -->
								<requireMavenVersion>
									<version>${miniumumMavenVersion}</version>
								</requireMavenVersion>

							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- PMD , Copy / Paste Detections -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.version}</version>
				<configuration>
					<linkXRef>true</linkXRef>
					<sourceEncoding>UTF-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>1.8</targetJdk>
					<failurePriority>${pmd.failurePriority}</failurePriority>

				</configuration>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
							<goal>cpd-check</goal>
							<goal>pmd</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- lombok.Generated -->

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.0</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/j.exec</destFile>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.00</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>


		<pluginManagement>
			<plugins>



				<!-- Coverage -->

				<!-- Git commit plugin, java projects get information -->
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>2.2.4</version>
					<executions>
						<execution>
							<id>get-the-git-infos</id>
							<goals>
								<goal>revision</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
						<verbose>false</verbose>
						<generateGitPropertiesFile>true</generateGitPropertiesFile>
						<skipPoms>false</skipPoms>
						<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
						<format>json</format>
						<gitDescribe>
							<skip>false</skip>
							<always>false</always>
							<dirty>-dirty</dirty>
						</gitDescribe>
						<validationProperties>
							<!-- verify that the current repository is not dirty -->
							<validationProperty>
								<name>validating git dirty</name>
								<value>${git.dirty}</value>
								<shouldMatchTo>false</shouldMatchTo>
							</validationProperty>
						</validationProperties>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>



	<!-- REPORTING -->
	<!-- Corbetura -->
	<reporting>
		<plugins>
			<!-- Checkstyle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${mavenCheckstylePluginVersion}</version>

				<configuration>
					<!-- Google checks - built in http://checkstyle.sourceforge.net/google_style.html -->
					<configLocation>google_checks.xml</configLocation>
					<encoding>UTF-8</encoding>
				</configuration>

				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>



			<!-- Coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.0</version>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<dataFile>${project.build.directory}/j.exec</dataFile>
				</configuration>
			</plugin>


		</plugins>
	</reporting>

	<!-- PROJECT INFORMATION -->

	<!-- Name of the project or module , typically more than just the artifactId 
		i.e. Java 1.5 = 'tiger', printed in the execution, build. Not mandatory but 
		useful. -->
	<name>npiper-parent-pom</name>

	<!-- Description of a project is always good, helps POM readers -->
	<description>
    Parent pom for solveapuzzle projects
  </description>


	<scm>
		<url>https://github.com/npiper/npiper-parent-pom</url>
		<connection>scm:git:git://github.com/npiper/npiper-parent-pom.git</connection>
		<developerConnection>scm:git:https://github.com/npiper/npiper-parent-pom.git</developerConnection>
	</scm>

	<!--manages the distribution of the artifact and supporting files during 
		build, release process. Critical for the mvn:deploy & mvn:release process -->
	<distributionManagement>

		<site>
			<id>gh-pages</id>
			<url>https://npiper.github.io/${project.name}</url>
		</site>

	</distributionManagement>

	<!-- PROFILES Build & Deploy Profiles -->

	<!-- <profiles> </profiles> -->


</project>
